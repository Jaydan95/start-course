if __name__ == "__main__":
    print("hi")
# __name__ 속성의 값이 __main__이면 print 실행, 소스코드가 메인으로 실행된 경우에만 실행됨, 다른 코드에서 이 모듈을 불러들여 사용할 경우 코드블록은 실행되지 않음
print("""
    \"안녕하세요\t파이썬\n시작\"  
    """)
#이스케이프 시퀀스 :
#프로그램의 소스 코드 내에서 사용할 수 있도록 백슬래시(\) 기호와 조합해서 사용하는 사전에 정의해둔 문자 조합으로, 문자열의 출력 결과를 제어하기 위해 사용
#문자열 포맷팅 :
#문자열 내에 사용된 문자열 표시 유형(문자열 포맷 코드)을 특정 값으로 변경하는 기법
print("이름:%s" % "홍길동") # %s 문자열 포맷
print("이름:%s\n나이:%s세"%("홍길동",20))
print("%c=%d"%(97,97))
# %c 문자 포맷, 정수를 유니코드 문자로 변환해 출력
# %d 10진 정수로 출력,
# %o 8진 정수 형태로 문자열 변환
# %x 16진 정수 형태로 문자열 변환
print("%d %o %x"%(10,10,10))
print("%s %d %x" % ("가", ord("가"), ord("가")))
print("%f %d"%(3.14, 3.14))
# %f 소수점 이하 6자리까지 출력된 문자열 변환 결과
# %d 정수부만 출력된 문자열 변환 결과
print("%d점은 상위 %d%%에 속합니다."%(98, 1))
# %% %문자 자체를 문자열 내에 포함될 수 있도록 함
print("%10s"%"우측정렬")
print("%-10s"%"좌측정렬")
print("%0.2f"%3.141592) # 부동소수점을 소수점 2자리까지 표시함
print("%10.2f"%3.141592) # 부동소수점을 소수점을 포함한 전체 자리수를 10, 소수점 이하 두 자리까지 표시하고, 앞의 남는 자리를 0으로 채움
print("이름:{0}, 나이:{1}".format("홍길동","26"))
# str.format() 함수를 이용한 문자열 포맷팅
print("{0:c} = {1}".format(97,97))
print("{0},{1},{2:x}".format("가",ord("가"),ord("가"))) # ord() 함수를 통해 정수값을 얻고, 이 정수값에 대한 문자열 변환 실시
print("{0:f} {1:.2f}".format(3.14, 3.14))
# {0:f} :  3.14에 대해 소수점 이하 6자리까지 출력된 문자열 변환 결과
# {1:.2f} : 3.14에 대해 소수점 이하 2자리까지 출력된 문자열 변환 결과
print("이름:{name}, 나이:{age}".format(name='홍길동', age=26))
print("{0:<10}".format("좌측정렬"))
print("{0:>10}".format("우측정렬"))
print("{0:^10}".format("중앙정렬"))
print("{0:★^10}".format("중앙정렬"))
# 부동소수점 숫자 폭, 소수점 이하 정밀도 표현
print("{0:0.2f}".format(3.141592)) # 소수점 이하 두 자리까지 표시
print("{0:10.2f}".format(3.141592)) # 전체 자릿수 10, 소수점 이하 두 자리까지 표시
print("{0:010.2f}".format(3.141592)) # 전체 자릿수 10, 소수점 이하 두 자리까지 표시, 앞의 남은 자리를 0으로 채움
print("{{ {0:.1f} }}".format(98.5)) # 소수점 이하 한 자리까지 표시, 출력 문자열의 중괄호를 문자 그대로 포함해 출력
